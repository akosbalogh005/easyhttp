apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: easyhttp
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: easyhttp
    control-plane: controller-manager
  name: easyhttp-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: easyhttps.httpapi.github.com
spec:
  group: httpapi.github.com
  names:
    kind: EasyHttp
    listKind: EasyHttpList
    plural: easyhttps
    singular: easyhttp
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: EasyHttp is the Schema for the easyhttps API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EasyHttpSpec defines the desired state of EasyHttp
            properties:
              certManIssuer:
                description: CertManInssuer issuer of cert manager (e.g 'letsencrypt-prod'). Cert manager is disabled when empty.
                type: string
              env:
                additionalProperties:
                  type: string
                description: Env is the map of environment of the application to be set
                type: object
              host:
                description: Host where the application is accesible from outside. Base of the Ingress route and certificate request
                type: string
              image:
                description: Image of the application
                type: string
              path:
                description: Path is  where the application can be called (from outside). Currently supported only in nginx ingress!
                type: string
              port:
                description: Port where the application (and srv) is listening
                type: integer
              replicas:
                description: Replicas of the HTTP server application
                format: int32
                type: integer
              tag:
                description: ImageTag version tag of image
                type: string
            type: object
          status:
            description: EasyHttpStatus defines the observed state of EasyHttp
            properties:
              is_deploy_ok:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file IsDeployOK flag for status of deployment'
                type: boolean
              is_ingress_ok:
                description: IsIngressOK flag for status of ingress setup
                type: boolean
              is_svc_ok:
                description: IsSvcOK flag for status of service
                type: boolean
              spec:
                description: IsCertOK flag for status of cert-manager setup
                properties:
                  certManIssuer:
                    description: CertManInssuer issuer of cert manager (e.g 'letsencrypt-prod'). Cert manager is disabled when empty.
                    type: string
                  env:
                    additionalProperties:
                      type: string
                    description: Env is the map of environment of the application to be set
                    type: object
                  host:
                    description: Host where the application is accesible from outside. Base of the Ingress route and certificate request
                    type: string
                  image:
                    description: Image of the application
                    type: string
                  path:
                    description: Path is  where the application can be called (from outside). Currently supported only in nginx ingress!
                    type: string
                  port:
                    description: Port where the application (and srv) is listening
                    type: integer
                  replicas:
                    description: Replicas of the HTTP server application
                    format: int32
                    type: integer
                  tag:
                    description: ImageTag version tag of image
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: easyhttp
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: easyhttp
  name: easyhttp-controller-manager
  namespace: easyhttp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: easyhttp
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: easyhttp
  name: easyhttp-leader-election-role
  namespace: easyhttp-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: easyhttp-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - httpapi.github.com
  resources:
  - easyhttps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - httpapi.github.com
  resources:
  - easyhttps/finalizers
  verbs:
  - update
- apiGroups:
  - httpapi.github.com
  resources:
  - easyhttps/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - get
  - list
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: easyhttp
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: easyhttp
  name: easyhttp-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: easyhttp
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: easyhttp
  name: easyhttp-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: easyhttp
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: easyhttp
  name: easyhttp-leader-election-rolebinding
  namespace: easyhttp-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: easyhttp-leader-election-role
subjects:
- kind: ServiceAccount
  name: easyhttp-controller-manager
  namespace: easyhttp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: easyhttp
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: easyhttp
  name: easyhttp-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: easyhttp-manager-role
subjects:
- kind: ServiceAccount
  name: easyhttp-controller-manager
  namespace: easyhttp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: easyhttp
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: easyhttp
  name: easyhttp-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: easyhttp-proxy-role
subjects:
- kind: ServiceAccount
  name: easyhttp-controller-manager
  namespace: easyhttp-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: easyhttp
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: easyhttp
    control-plane: controller-manager
  name: easyhttp-controller-manager-metrics-service
  namespace: easyhttp-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: easyhttp
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: easyhttp
    control-plane: controller-manager
  name: easyhttp-controller-manager
  namespace: easyhttp-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/akosbalogh005/easyhttp:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: easyhttp-controller-manager
      terminationGracePeriodSeconds: 10
